version: '3.7'

services:

  nginx:
    build:
      context: ./.docker/nginx
      args:
        USER: ${USER}
        SSL: ${SSL}
        TZ: ${TZ}
        WORKDIR_SERVER: /home/${USER}/html
        SHOP_URI: ${SHOP_URI}
        AUTH_CONFIG: ${AUTH_CONFIG}
        AUTH_USER: ${AUTH_USER}
        AUTH_PASS: ${AUTH_PASS}
    container_name: ${NAMESPACE}_nginx
    image: ${NAMESPACE}/nginx
    working_dir: /home/${USER}/html
    depends_on:
      - php
      - redis_pagespeed
    ports:
      - ${WEBSERVER_SECURE_PORT}:443
      - ${WEBSERVER_UNSECURE_PORT}:80
    volumes:
      - app_data:/home/${USER}/html:delegated
      - php_socket:/var/run/php
      #- letsencrypt_certs:/etc/nginx/ssl
      #- letsencrypt_www:/var/www/letsencrypt

  php:
    build:
      context: ./.docker/php
      args:
        USER: ${USER}
        TZ: ${TZ}
        PHP_VERSION_SET_IMAGE: php:${PHP_VERSION_SET}-fpm-alpine
        PHP_VERSION_SET: ${PHP_VERSION_SET}
        WORKDIR_SERVER: /home/${USER}/html
        XDEBUG_ENABLE: ${XDEBUG_ENABLE}
    container_name: ${NAMESPACE}_php_${PHP_VERSION_SET}
    image: ${NAMESPACE}/php:${PHP_VERSION_SET}-fpm-alpine
    sysctls:
      net.core.somaxconn: 65536
    working_dir: /home/${USER}/html
    depends_on:
      - db
      - redis
      - elasticsearch
    links:
      - db
    environment:
      COMPOSER_CACHE_DIR: /home/${USER}/.composer
    volumes:
      - redis_data_socket:/var/run/redis
      - app_data:/home/${USER}/html:delegated
      - php_socket:/var/run/php
      - mariadb_socket:/var/run/mysqld
      - ~/.cache/composer:/home/${USER}/.composer
      - ./.docker/php/conf/extra/php-ini-overrides.ini:/usr/local/etc/php/conf.d/php-ini-overrides.ini

  db:
    image: mariadb:10.5.2
    container_name: ${NAMESPACE}_db
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - 3306:3306
    volumes:
      - mariadb_socket:/var/run/mysqld
      - mariadb_data:/var/lib/mysql/
      - .docker/mysql/db_dumps:/docker-entrypoint-initdb.d/
    command: >
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --query_cache_size=0
      --query_cache_type=0
      --query_cache_limit=0

  redis:
    build:
      context: ./.docker/redis
      args:
        TZ: ${TZ}
        USER: ${USER}
    container_name: ${NAMESPACE}_redis
    image: ${NAMESPACE}/redis
    sysctls:
      net.core.somaxconn: '1024'
    entrypoint: redis-server
    command: ["/etc/redis/redis.conf", "--appendonly", "yes"]
    volumes:
      - redis_data_socket:/var/run/redis
      - ./.docker/redis/conf/redis.conf:/etc/redis/redis.conf

  redis_pagespeed:
    build:
      context: ./.docker/redis
      args:
        TZ: ${TZ}
        USER: ${USER}
    container_name: ${NAMESPACE}_redis_pagespeed
    image: ${NAMESPACE}/redis
    sysctls:
      net.core.somaxconn: '1024'

  mailhog:
    container_name: ${NAMESPACE}_mailhog
    image: mailhog/mailhog:latest
    ports:
      - ${MAILHOG_EXTERNAL_PORT}:8025

  elasticsearch:
    build:
      context: ./.docker/elasticsearch
    container_name: ${NAMESPACE}_elasticsearch
    environment:
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1024m -Xmx1024m
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elastic_data:/usr/share/elasticsearch/data

#  letsencrypt:
#    container_name: ${NAMESPACE}_letsencrypt
#    build:
#      context: ./.docker/letsencrypt
#      args:
#        SHOP_URI: ${SHOP_URI}
#    image: ${NAMESPACE}/letsencrypt
#    command: /bin/true
#    volumes:
#      - letsencrypt_certs:/etc/nginx/ssl
#      - letsencrypt_www:/var/www/letsencrypt

volumes:
  #letsencrypt_certs:
  #letsencrypt_www:
  mariadb_data:
  elastic_data:
  php_socket:
  mariadb_socket:
  redis_data_socket:
  app_data:
    external: true