version: '3.7'

services:

  #  apache:
  #    build:
  #      context: ./.docker/apache
  #      args:
  #        TZ: ${TZ}
  #        USER: ${USER}
  #        WORKDIR_SERVER: /home/${USER}/html
  #        SHOP_URI: ${SHOP_URI}
  #        AUTH_CONFIG: ${AUTH_CONFIG}
  #        AUTH_USER: ${AUTH_USER}
  #        AUTH_PASS: ${AUTH_PASS}
  #    container_name: ${NAMESPACE}_apache
  #    image: ${NAMESPACE}/apache
  #    working_dir: /home/${USER}/html
  #    depends_on:
  #      - php
  #    ports:
  #      - ${APACHE_SECURE_PORT}:443
  #      - ${APACHE_UNSECURE_PORT}:80
  #    volumes:
  #      - app_data:/home/${USER}/html:delegated
  #      - php_socket:/var/run/php:cached
  #      - ${PWD}/.docker/apache/conf/httpd-mpm.conf:/usr/local/apache/conf/extra/httpd-mpm.conf
  #      - ${PWD}/.docker/apache/etc/apache2/ssl:/etc/apache2/ssl

  nginx:
    build:
      context: ./.docker/nginx
      args:
        USER: ${USER}
        TZ: ${TZ}
        WORKDIR_SERVER: /home/${USER}/html
        SHOP_URI: ${SHOP_URI}
        AUTH_CONFIG: ${AUTH_CONFIG}
        AUTH_USER: ${AUTH_USER}
        AUTH_PASS: ${AUTH_PASS}
    container_name: ${NAMESPACE}_nginx
    image: ${NAMESPACE}/nginx
    working_dir: /home/${USER}/html
    depends_on:
      - php
      - redis_pagespeed
    ports:
      - ${WEBSERVER_SECURE_PORT}:443
      - ${WEBSERVER_UNSECURE_PORT}:80
    volumes:
      - app_data:/home/${USER}/html:delegated
      - php_socket:/var/run/php
      - redis_pagespeed_data:/var/cache/ngx_pagespeed
      - letsencrypt_certs:/etc/nginx/ssl
      - letsencrypt_www:/var/www/letsencrypt

  php:
    build:
      context: ./.docker/php
      args:
        USER: ${USER}
        TZ: ${TZ}
        PHP_VERSION_SET_IMAGE: php:${PHP_VERSION_SET}-fpm-alpine
        PHP_VERSION_SET: ${PHP_VERSION_SET}
        WORKDIR_SERVER: /home/${USER}/html
        XDEBUG_ENABLE: ${XDEBUG_ENABLE}
    container_name: ${NAMESPACE}_php
    image: ${NAMESPACE}/php:${PHP_VERSION_SET}-fpm-alpine
    sysctls:
      net.core.somaxconn: 65536
    working_dir: /home/${USER}/html
    depends_on:
      - db
      - redis
      - elasticsearch
    links:
      - db
    environment:
      COMPOSER_CACHE_DIR: /home/${USER}/.composer
    volumes:
      - ~/.cache/composer:/home/${USER}/.composer
      - app_data:/home/${USER}/html:delegated
      - php_socket:/var/run/php:cached
      - mariadb_socket:/var/run/mysqld:cached
      - ${PWD}/.docker/php/conf/extra/php-ini-overrides.ini:/usr/local/etc/php/conf.d/php-ini-overrides.ini

  db:
    image: mariadb:latest
    container_name: ${NAMESPACE}_db
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - 3306:3306
    volumes:
      - mariadb_socket:/var/run/mysqld
      - mariadb_data:/var/lib/mysql/
      - .docker/mysql/db_dumps:/docker-entrypoint-initdb.d/

  redis:
    build:
      context: ./.docker/redis
      args:
        TZ: ${TZ}
        USER: ${USER}
    container_name: ${NAMESPACE}_redis
    image: ${NAMESPACE}/redis
    sysctls:
      net.core.somaxconn: '1024'
    volumes:
      - redis_data:/data

  redis_pagespeed:
    build:
      context: ./.docker/redis
      args:
        TZ: ${TZ}
        USER: ${USER}
    container_name: ${NAMESPACE}_redis_pagespeed
    image: ${NAMESPACE}/redis
    sysctls:
      net.core.somaxconn: '1024'
    volumes:
      - redis_pagespeed_data:/data

  mailhog:
    container_name: ${NAMESPACE}_mailhog
    image: mailhog/mailhog:latest
    ports:
      - ${MAILHOG_EXTERNAL_PORT}:8025

  elasticsearch:
    build:
      context: ./.docker/elasticsearch
      args:
        TZ: ${TZ}
    container_name: ${NAMESPACE}_elasticsearch
    image: ${NAMESPACE}/elasticsearch:5.2
    environment:
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1024m -Xmx1024m
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elastic_data:/usr/share/elasticsearch/data

  host-settings:
    build:
      context: ./.docker/host-settings
    container_name: ${NAMESPACE}_host-settings
    image: ${NAMESPACE}/host-settings
    restart: 'no'
    privileged: true
    volumes:
      - /proc/sys/vm:/mnt/vm

  letsencrypt:
    container_name: ${NAMESPACE}_letsencrypt
    build:
      context: ./.docker/letsencrypt
      args:
        SHOP_URI: ${SHOP_URI}
    image: ${NAMESPACE}/letsencrypt
    command: /bin/true
    volumes:
      - letsencrypt_certs:/etc/nginx/ssl
      - letsencrypt_www:/var/www/letsencrypt

volumes:
  mariadb_data:
  elastic_data:
  letsencrypt_certs:
  letsencrypt_www:
  php_socket:
    driver_opts:
      type: tmpfs
      device: tmpfs
  mariadb_socket:
    driver_opts:
      type: tmpfs
      device: tmpfs
  redis_data:
    driver_opts:
      type: tmpfs
      device: tmpfs
  redis_pagespeed_data:
    driver_opts:
      type: tmpfs
      device: tmpfs
  app_data:
    external: true