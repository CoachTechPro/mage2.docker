version: "3.7"

services:

  nginx:
    container_name: ${NAMESPACE}_nginx
    build:
      context: ./.docker/nginx
      args:
        USERNAME: ${USERNAME}
        WORKDIR_SERVER: ${WORKDIR_SERVER}
        SHOP_URI: ${SHOP_URI}
    image: ${NAMESPACE}/nginx
    working_dir: ${WORKDIR_SERVER}
    depends_on:
      - php
    ports:
      - 80:80
      - 443:443
    volumes:
      - app_data:${WORKDIR_SERVER}:delegated
      - phpsocket:/var/run

  php:
    container_name: ${NAMESPACE}_php
    build:
      context: ./.docker/php
      args:
        PHP_VERSION_SET_IMAGE: php:${PHP_VERSION_SET}-fpm-alpine3.8
        USERNAME: ${USERNAME}
        WORKDIR_SERVER: ${WORKDIR_SERVER}
        INSTALL_MAGENTO: ${INSTALL_MAGENTO}
        INSTALL_MAGENTO_VERSION: ${INSTALL_MAGENTO_VERSION}
    image: ${NAMESPACE}/php_${PHP_VERSION_SET}:magento-installed_${INSTALL_MAGENTO}
    working_dir: ${WORKDIR_SERVER}
    depends_on:
      - mysql
      - redis
      # - elasticsearch
    links:
      - mailhog
    volumes:
      - app_data:${WORKDIR_SERVER}:delegated
      - phpsocket:/var/run
      - redissocket:/var/redis
      - mysqlsocket:/var/run/mysqld

  mysql:
    container_name: ${NAMESPACE}_mysql
    build:
      context: ./.docker/mysql
      args:
        USERNAME: ${USERNAME}
    image: ${NAMESPACE}/mysql
    ports:
      - ${DATABASE_PORT_EXTERNAL}:3306
    environment:
      MYSQL_DATABASE: ${DATABASE}
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql:cached
      - mysqlsocket:/var/run/mysqld

  redis:
    container_name: ${NAMESPACE}_redis
    build:
      context: ./.docker/redis
      args:
        USERNAME: ${USERNAME}
    image: ${NAMESPACE}/redis
    sysctls:
      net.core.somaxconn: '1024'
    volumes:
      - redissocket:/var/redis
      - redis_data:/data:cached

  mailhog:
    container_name: ${NAMESPACE}_mailhog
    image: mailhog/mailhog:latest
    expose:
      - 1025
    ports:
      - 8025:8025

  elasticsearch:
    build:
      context: ./.docker/elasticsearch
      args:
        ELASTICSEARCH_VERSION: ${ELASTICSEARCH_VERSION}
    image: ${NAMESPACE}/elasticsearch:${ELASTICSEARCH_VERSION}
    container_name: ${NAMESPACE}_elasticsearch
      environment:
        - cluster.name=docker-cluster
        - bootstrap.memory_lock=true
        - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
      ulimits:
        memlock:
          soft: -1
          hard: -1
        nofile:
          soft: 65536
          hard: 65536
      cap_add:
        - IPC_LOCK
      volumes:
        - elastic_data:/usr/share/elasticsearch/data
      ports:
        - 9200:9200

volumes:
  phpsocket:
  mysqlsocket:
  redissocket:
  elastic_data:
    driver: local
  redis_data:
    driver: local
  mysql_data:
    driver: local
  app_data:
    external: true