version: "3.7"

services:

  nginx:
    build:
      context: ./.docker/nginx
      args:
        TZ: ${TZ}
        USERNAME: ${USERNAME}
        WORKDIR_SERVER: ${WORKDIR_SERVER}
        SHOP_URI: ${SHOP_URI}
        AUTH_CONFIG: ${AUTH_CONFIG}
        AUTH_USER: ${AUTH_USER}
        AUTH_PASS: ${AUTH_PASS}
    container_name: ${NAMESPACE}_nginx
    image: ${NAMESPACE}/nginx
    working_dir: ${WORKDIR_SERVER}
    depends_on:
      - php
    ports:
      - 80:80
      - 443:443
    volumes:
      - app_data:${WORKDIR_SERVER}:delegated
      - php_socket:/var/run/php
      - pagespeed_cache:/var/cache/ngx_pagespeed

  php:
    build:
      context: ./.docker/php
      args:
        TZ: ${TZ}
        PHP_VERSION_SET_IMAGE: php:${PHP_VERSION_SET}-fpm-alpine
        PHP_VERSION_SET: ${PHP_VERSION_SET}
        USERNAME: ${USERNAME}
        WORKDIR_SERVER: ${WORKDIR_SERVER}
        XDEBUG_ENABLE: ${XDEBUG_ENABLE}
        INSTALL_MAGENTO: ${INSTALL_MAGENTO}
        INSTALL_MAGENTO_VERSION: ${INSTALL_MAGENTO_VERSION}
        INSTALL_SAMPLE_DATA: ${INSTALL_SAMPLE_DATA}
        COMPOSER_UPDATE_ON_START: ${COMPOSER_UPDATE_ON_START}
    container_name: ${NAMESPACE}_php
    image: ${NAMESPACE}/php:${PHP_VERSION_SET}-fpm-alpine
    sysctls:
      net.core.somaxconn: '65536'
    working_dir: ${WORKDIR_SERVER}
    depends_on:
      - mysql
    volumes:
      - app_data:${WORKDIR_SERVER}:delegated
      - php_socket:/var/run/php
      - redis_cache_socket:/var/redis
      - redis_session_socket:/var/redis
      - mysql_socket:/var/run/mysqld
      - mysql_vol:/var/lib/mysql

  mysql:
    build:
      context: ./.docker/mysql
      args:
        USERNAME: ${USERNAME}
        TZ: ${TZ}
    container_name: ${NAMESPACE}_mysql
    image: ${NAMESPACE}/mysql
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - mysql_vol:/var/lib/mysql/
      - mysql_socket:/var/run/mysqld
      - .docker/mysql/db_dumps:/docker-entrypoint-initdb.d/

  redis_cache:
    build:
      context: ./.docker/redis
      args:
        USERNAME: ${USERNAME}
        TZ: ${TZ}
    container_name: ${NAMESPACE}_redis_cache
    image: ${NAMESPACE}/redis:cache
    sysctls:
      net.core.somaxconn: '1024'
    volumes:
      - redis_cache_socket:/var/redis
      - redis_cache_data:/data

  redis_session:
    build:
      context: ./.docker/redis
      args:
        USERNAME: ${USERNAME}
        TZ: ${TZ}
    container_name: ${NAMESPACE}_redis_session
    image: ${NAMESPACE}/redis:session
    sysctls:
      net.core.somaxconn: '1024'
    volumes:
      - redis_session_socket:/var/redis
      - redis_session_data:/data

  mailhog:
    container_name: ${NAMESPACE}_mailhog
    image: mailhog/mailhog:latest
    expose:
      - 1025
    ports:
      - 8025:8025

  elasticsearch:
    build:
      context: ./.docker/elasticsearch
      args:
        TZ: ${TZ}
    container_name: ${NAMESPACE}_elasticsearch
    image: ${NAMESPACE}/elasticsearch:5.2
    environment:
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
      - "http.host=0.0.0.0"
      - "transport.host=127.0.0.1"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200

volumes:
  php_socket:
  mysql_vol:
  redis_cache_socket:
  redis_session_socket:
  mysql_socket:
  redis_cache_data:
  redis_session_data:
  elastic_data:
  pagespeed_cache:
  app_data:
    driver_opts:
      type: none
      o: bind
      device: "${WORKDIR}"
